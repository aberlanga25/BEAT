<point_of_interest>
	<item>
		<name>sym.imp.socket</name>
		<type>Function</type>
		<attributes>
			<parameters>[int domain, int type, int protocol]</parameters>
			<retur>int</retur>
		</attributes>
		<pythonOutput>sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.bind</name>
		<type>Function</type>
		<attributes>
			<parameters>[int sockfd, const struct sockaddr *addr, socklen_t addrlen]</parameters>
			<retur>int</retur>
		</attributes>
		<pythonOutput>sock.bind(server_address)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.listen</name>
		<type>Function</type>
		<attributes>
			<parameters>[int sockfd, int backlog]</parameters>
			<retur>int</retur>
		</attributes>
		<pythonOutput>sock.listen(1)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.accept</name>
		<type>Function</type>
		<attributes>
			<parameters>[int sockfd, struct sockaddr *addr, socklen_t *addrlen]</parameters>
			<retur>int</retur>
		</attributes>
		<pythonOutput>connection, client_address = sock.accept()</pythonOutput>
	</item>
	<item>
		<name>sym.imp.recv</name>
		<type>Function</type>
		<attributes>
			<parameters>[int sockfd, void *buf, size_t len, int flags]</parameters>
			<retur>ssize_t</retur>
		</attributes>
		<pythonOutput>data = connection.recv(16)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.send</name>
		<type>Function</type>
		<attributes>
			<parameters>[int sockfd, const void *buf, size_t len, int flags]</parameters>
			<retur>ssize_t</retur>
		</attributes>
		<pythonOutput>sock.sendall(message)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.close</name>
		<type>Function</type>
		<attributes>
			<parameters>[int fd]</parameters>
			<retur>int</retur>
		</attributes>
		<pythonOutput>sock.close()</pythonOutput>
	</item>
	<item>
		<name>sym.imp.gethostbyname</name>
		<type>Function</type>
		<attributes>
			<parameters>[char *name]</parameters>
			<retur>struct hostent*</retur>
		</attributes>
		<pythonOutput>socket.gethostbyname(hostname)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.inet_ntoa</name>
		<type>Function</type>
		<attributes>
			<parameters>[struct in_addr in]</parameters>
			<retur>char*</retur>
		</attributes>
		<pythonOutput>socket.inet_ntoa(packed_ip)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.inet_addr</name>
		<type>Function</type>
		<attributes>
			<parameters>[char *cp]</parameters>
			<retur>in_addr_t</retur>
		</attributes>
		<pythonOutput>socket.inet_aton(ip_string)</pythonOutput>
	</item>
	<item>
		<name>sym.imp.htons</name>
		<type>Function</type>
		<attributes>
			<parameters>[int hostshort]</parameters>
			<retur>int</retur>
		</attributes>
		<pythonOutput>socket.htons(x)</pythonOutput>
	</item>
	<item>
		<name>Client</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Server</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Connection</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Binding</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>IP</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Port</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Address</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Session</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
	<item>
		<name>Socket</name>
		<type>String</type>
		<attributes/>
		<pythonOutput/>
	</item>
</point_of_interest>